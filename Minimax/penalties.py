import numpy as np


class Penalties:
    pawns = np.array([
        [0, 0, 0, 0, 0, 0, 0, 0],
        [50, 50, 50, 50, 50, 50, 50, 50],
        [10, 10, 20, 30, 30, 20, 10, 10],
        [5, 5, 10, 25, 25, 10, 5, 5],
        [0, 0, 0, 20, 20, 0, 0, 0],
        [5, -5, 10, 0, 0, -10, -5, 5],
        [5, 10, 10, -20, -20, 10, 10, 5],
        [0, 0, 0, 0, 0, 0, 0, 0]
    ])

    knights = np.array([
        [-50, -40, -30, -30, -30, -30, -40, -50],
        [-40, -20, 0, 0, 0, 0, -20, -40],
        [-30, 0, 10, 15, 15, 10, 0, -30],
        [-30, 5, 15, 20, 20, 15, 5, -30],
        [-30, 0, 15, 20, 20, 15, 0, 0],
        [-30, 5, 10, 15, 15, 10, 5, -30],
        [-40, -20, 0, 5, 5, 0, -20, -40],
        [-50, -40, -30, -30, -30, -30, -40, -50]
    ])

    bishop = np.array([
        [-20, -10, -10, -10, -10, -10, -10, -20],
        [-10, 0, 0, 0, 0, 0, 0, -10],
        [-10, 0, 5, 10, 10, 5, 0, -10],
        [-10, 5, 5, 10, 10, 5, 5, -10],
        [-10, 0, 10, 10, 10, 10, 0, -10],
        [-10, 10, 10, 10, 10, 10, 10, -10],
        [-10, 5, 0, 0, 0, 0, 5, -10],
        [-20, -10, -10, -10, -10, -10, -10, -20]
    ])

    rook = np.array([
        [0, 0, 0, 0, 0, 0, 0, 0],
        [5, 10, 10, 10, 10, 10, 10, 5],
        [-5, 0, 0, 0, 0, 0, 0, -5],
        [-5, 0, 0, 0, 0, 0, 0, -5],
        [-5, 0, 0, 0, 0, 0, 0, -5],
        [-5, 0, 0, 0, 0, 0, 0, -5],
        [-5, 0, 0, 0, 0, 0, 0, -5],
        [0, 0, 0, 5, 5, 0, 0, 0]
    ])

    queen = np.array([
        [-20, -10, -10, -5, -5, -10, -10, -20],
        [-10, 0, 0, 0, 0, 0, 0, -10],
        [-10, 0, 5, 5, 5, 5, 0, -10],
        [-5, 0, 5, 5, 5, 5, 0, -5],
        [0, 0, 5, 5, 5, 5, 0, -5],
        [-10, 5, 5, 5, 5, 5, 0, -10],
        [-10, 0, 5, 0, 0, 0, 0, -10],
        [-20, -10, -10, -5, -5, -10, -10, -20]
    ])

    king = np.array([
        [-30, -40, -40, -50, -50, -40, -40, -30],
        [-30, -40, -40, -50, -50, -40, -40, -30],
        [-30, -40, -40, -50, -50, -40, -40, -30],
        [-30, -40, -40, -50, -50, -40, -40, -30],
        [-20, -30, -30, -40, -40, -30, -30, -20],
        [-10, -20, -20, -20, -20, -20, -20, -10],
        [20, 20, 0, 0, 0, 0, 20, 20],
        [20, 30, 10, 0, 0, 10, 30, 20]
    ])

    @staticmethod
    def get_score_by_piece(piece, x, y):
        score = 0

        if piece.isLower():
            x = 8 - x - 1
            y = 8 - y - 1

        if piece.lower() == 'p':
            score = Penalties.pawns[y][x]
        if piece.lower() == 'b':
            score = Penalties.beshop[y][x]
        if piece.lower() == 'n':
            score = Penalties.knights[y][x]
        if piece.lower() == 'r':
            score = Penalties.rook[y][x]
        if piece.lower() == 'q':
            score = Penalties.queen[y][x]
        if piece.lower() == 'k':
            score = Penalties.king[y][x]

        return score

    # king_endgame = np.array([
    #     [-50, -40, -30, -20, -20, -30, -40, -50],
    #     [-30, -20, -10, 0, 0, -10, -20, -30],
    #     [-30, -10, 20, 30, 30, 20, -10, -30],
    #     [-30, -10, 30, 40, 40, 30, -10, -30],
    #     [-30, -10, 30, 40, 40, 30, -10, -30],
    #     [-30, -10, 20, 30, 30, 20, -10, -30],
    #     [-30, -30, 0, 0, 0, 0, -30, -30],
    #     [-50, -30, -30, -30, -30, -30, -30, -50]
    # ])
